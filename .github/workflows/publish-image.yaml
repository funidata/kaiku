name: Publish image

on:
  workflow_call:
    inputs:
      latest:
        description:
          Release as the latest version, tagging the images with the version number found in
          package.json.
        default: false
        type: boolean

jobs:
  tags:
    name: Compose version tags
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Parse semver number from package.json
        run: |
          PACKAGE_VERSION=$(cat package.json | jq '.version' | tr -d '"')
          echo "MAJOR=$(echo $PACKAGE_VERSION | cut -d "." -f 1)" >> $GITHUB_ENV
          echo "MINOR=$(echo $PACKAGE_VERSION | cut -d "." -f 2)" >> $GITHUB_ENV
          echo "PATCH=$(echo $PACKAGE_VERSION | cut -d "." -f 3)" >> $GITHUB_ENV
      - name: Compose Docker tags
        run: |
          echo "MAJOR_V=ghcr.io/funidata/kaiku:$MAJOR" >> $GITHUB_ENV
          echo "MINOR_V=ghcr.io/funidata/kaiku:$MAJOR.$MINOR" >> $GITHUB_ENV
          echo "FULL_V=ghcr.io/funidata/kaiku:$MAJOR.$MINOR.$PATCH" >> $GITHUB_ENV
      - name: Compose tag list
        run: echo "TAG_LIST=$MAJOR_V,$MINOR_V,$FULL_V,ghcr.io/funidata/kaiku:latest" >> $GITHUB_ENV
      - name: Select correct tags
        id: tags
        run:
          echo SELECTED_TAGS=$(if [ ${{ inputs.latest }} = true ]; then echo $TAG_LIST; else echo
          "ghcr.io/funidata/kaiku:next"; fi) >> $GITHUB_OUTPUT
    outputs:
      tag-list: ${{ steps.tags.outputs.SELECTED_TAGS }}

  publish:
    name: Publish image
    needs:
      - tags
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build production image
        uses: docker/build-push-action@v5
        with:
          context: app
          push: true
          tags: ${{ needs.tags.outputs.tag-list }}
